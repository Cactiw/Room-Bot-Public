from work_materials.globals import *
import time

def pr(bot, update):
    mes = update.message
    #if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id = -1001330929174)):
        #return

    request = "SELECT * FROM users WHERE user_id = %s"
    cursor.execute(request, (mes.text.split('_')[1],))
    row = cursor.fetchone()
    if row != None:
        response = row[1] + "<b>" + row[4] + '</b>\n–ë–æ–µ—Ü –∑–∞–º–∫–∞ ' + row[1] + '\n'
        if int(row[12]):
            request = "SELECT * FROM dspam_users WHERE user_id = %s"
            cursor.execute(request, (row[0],))
            dspam_row = cursor.fetchone()
            if row is not None:
                response += "\n–ü–æ–∑—ã–≤–Ω–æ–π: <b>" + str(dspam_row[3]) + "</b>\n"
                request = "SELECT rank_name, rank_unique FROM ranks WHERE rank_id = %s"
                cursor_2.execute(request, (dspam_row[4],))
                rank = cursor_2.fetchone()
                response += "–ó–≤–∞–Ω–∏–µ: <b>"
                if rank[1]:
                    response += ranks_specials[rank[1]]
                response += rank[0] + "</b>\n–û–ø–∏—Å–∞–Ω–∏–µ –∑–≤–∞–Ω–∏—è: /rank_{0}\n".format(str(dspam_row[4]))
                if (mes.from_user.id == 231900398) or (mes.from_user.id in get_admin_ids(bot, chat_id=-1001330929174)):
                    response += "–°–º–µ–Ω–∏—Ç—å –∑–≤–∞–Ω–∏–µ: /set_rank {0}".format(dspam_row[0]) + " {–Ω–æ–º–µ—Ä –∑–≤–∞–Ω–∏—è}\n"
                response += "–†–µ–ø—É—Ç–∞—Ü–∏—è: <b>" + str(dspam_row[6]) + "</b>\n"
                # response += "–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: " + str(dspam_row[5]) + " *now in development*\n"
                response += "\n"
        # response = response + '–ù–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è: ' + str(row[0]) + '\n'
        #if row[1] == 'üîí':
            #bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
            #return
        bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
    else:
        request = "SELECT * FROM dspam_users WHERE telegram_id = %s"
        cursor.execute(request, (mes.from_user.id,))
        dspam_row = cursor.fetchone()
        if row is not None:
            response = "–ü–æ–∑—ã–≤–Ω–æ–π: <b>" + str(dspam_row[3]) + "</b>\n"
            response += "–ó–≤–∞–Ω–∏–µ: <b>" + str(dspam_row[4]) + "</b>\n"
            # response += "–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: " + str(dspam_row[5]) + " *now in development*\n"
            response += "\n"
            bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
            return

        response = '–ü—Ä–æ—Ñ–∏–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        bot.send_message(chat_id=update.message.chat_id, text=response)


def rank_list(bot, update, args):
    mes = update.message
    if not args:
        arg = 0
    else:
        arg = args[0]
    request = "SELECT * FROM ranks WHERE rank_unique = %s"
    cursor.execute(request, (arg,))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–π –µ—â—ë –Ω–µ—Ç. –î–æ–±–∞–≤—å—Ç–µ!'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    response = "–°–ø–∏—Å–æ–∫ –∑–≤–∞–Ω–∏–π:"
    while row:
        response_new = "\n"
        if row[3] == 1:
            response_new += "üéó"
        elif row[3] == 2:
            response_new += "üéñ"
        response_new += "<b>" + row[1] + "</b>"
        response_new += "\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /rank_" + str(row[0]) + "\n______________________________\n"
        if len(response + response_new) >= 4096:
            bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
            response = ""
        response += response_new
        row = cursor.fetchone()

    if (mes.from_user.id == 231900398) or (mes.from_user.id in get_admin_ids(bot, chat_id=-1001330929174)):
        response += "\n–î–æ–±–∞–≤–∏—Ç—å –∑–≤–∞–Ω–∏–µ: /add_rank"


    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')

def add_rank(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "INSERT INTO ranks(rank_name, rank_data) VALUES('–ù–æ–≤–æ–µ –∑–≤–∞–Ω–∏–µ', '')"
    cursor.execute(request)
    conn.commit()

    request = "SELECT rank_id FROM ranks ORDER BY rank_id DESC LIMIT 1"
    cursor.execute(request)
    row = cursor.fetchone()
    response = "–ó–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:\n–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å: /edit_rank_{0}".format(row[0])
    bot.send_message(chat_id=update.message.chat_id, text=response)



def rank(bot, update):
    mes = update.message
    request = "SELECT * FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[1],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    response = "<b>"
    if row[3]:
        response += ranks_specials[row[3]]
    response += row[1] + "</b>:\n"
    response += row[2] + "\n"
    if row[3] == 1:
        response += "<b>\nüéó–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∑–≤–∞–Ω–∏–µ" + "</b>\n"
    if row[3] == 2:
        response += "<b>\nüéñ–ù–∞–≥—Ä–∞–¥–Ω–æ–µ –∑–≤–∞–Ω–∏–µ" + "</b>\n"
    if (mes.from_user.id == 231900398) or (mes.from_user.id in get_admin_ids(bot, chat_id=-1001330929174)):
        response += "\n–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–≤–∞–Ω–∏–µ: /edit_rank_{0}".format(mes.text.split("_")[1])
    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')


def set_rank(bot, update, args):
    mes = update.message
    if mes.from_user.id != 231900398 and mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174):
        return
    if not args:
        response = '–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "SELECT rank_name FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (args[1],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "SELECT * FROM dspam_users WHERE user_id = %s"
    cursor.execute(request, (args[0],))
    row = cursor.fetchone()
    if row is None:
        response = '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "UPDATE dspam_users SET rank = %s WHERE user_id = %s"
    cursor.execute(request, (args[1], args[0]))
    conn.commit()

    response = '–ó–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!'
    bot.send_message(chat_id=update.message.chat_id, text=response)
    response_to_id = row[1]
    request = "SELECT username FROM dspam_users WHERE telegram_id = %s"
    cursor.execute(request, (mes.from_user.id,))
    row = cursor.fetchone()
    username = row[0]
    request = "SELECT rank_name FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (args[1],))
    row = cursor.fetchone()
    rank = row[0]
    try:
        bot.send_message(chat_id=response_to_id, text="–í–∞—à–µ –∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ <b>{0}</b> –Ω–∞ <b>{1}</b>.\n–°–º–æ—Ç—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ /profile".format(username, rank), parse_mode='HTML')
    except TelegramError:
        bot.send_message(chat_id=-1001197381190, text="–û–ø–æ–≤–µ—â–µ–Ω–∏–µ '{0}' –Ω–µ —É–¥–∞–ª–æ—Å—å".format(row[3]))


def edit_rank(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "SELECT * FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[2],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    rank_id = row[0]
    response = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–≤–∞–Ω–∏—è <b>{0}</b>:\n".format(row[1])
    response += "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ: /r_set_name {0} ".format(rank_id) + "{–Ω–æ–≤–æ–µ –∏–º—è}\n"
    response += "–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ: /r_set_description {0} ".format(rank_id) + "{–Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ}\n"
    if row[3] == 1:
        response += "\nüéó–û—Ç–º–µ–Ω–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: /r_set_unique_{0}_".format(rank_id) + "0\n"
        response += "üéñ–°–¥–µ–ª–∞—Ç—å –Ω–∞–≥—Ä–∞–¥–Ω—ã–º: /r_set_unique_{0}_".format(rank_id) + "2\n"
    elif row[3] == 2:
        response += "\nüéñ–°–¥–µ–ª–∞—Ç—å –∑–≤–∞–Ω–∏–µ –æ–±—ã—á–Ω—ã–º: /r_set_unique_{0}_".format(rank_id) + "0\n"
        response += "üéó–°–¥–µ–ª–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º: /r_set_unique_{0}_".format(rank_id) + "1\n"
    else:
        response += "\nüéó–°–¥–µ–ª–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º: /r_set_unique_{0}_".format(rank_id) + "1\n"
        response += "üéñ–°–¥–µ–ª–∞—Ç—å –Ω–∞–≥—Ä–∞–¥–Ω—ã–º: /r_set_unique_{0}_".format(rank_id) + "2\n"

    response += "\n\n–£–¥–∞–ª–∏—Ç—å –∑–≤–∞–Ω–∏–µ: /del_rank_{0}".format(rank_id)
    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')

def del_rank(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "SELECT rank_id FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[2],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "UPDATE dspam_users SET rank = 3 WHERE rank = %s"
    cursor.execute(request, (mes.text.split("_")[2],))
    conn.commit()
    request = "DELETE FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[2],))
    conn.commit()
    response = '–ó–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ\n–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∏–º–µ–≤—à–∏–µ —ç—Ç–æ –∑–≤–∞–Ω–∏–µ, –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ.'
    bot.send_message(chat_id=update.message.chat_id, text=response)




def r_set_name(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "SELECT rank_id FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split(" ")[1],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    offset = mes.text.find(" ") + 1
    from_position = mes.text[offset:].find(" ")
    request = "UPDATE ranks SET rank_name = %s WHERE rank_id = %s"
    cursor.execute(request, (mes.text[from_position + offset + 1:], mes.text.split(" ")[1]))
    conn.commit()
    response = '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ'
    bot.send_message(chat_id=update.message.chat_id, text=response)


def r_set_description(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "SELECT rank_id FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split(" ")[1],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    offset = mes.text.find(" ") + 1
    from_position = mes.text[offset:].find(" ")
    request = "UPDATE ranks SET rank_data = %s WHERE rank_id = %s"
    cursor.execute(request, (mes.text[from_position + offset + 1:], mes.text.split(" ")[1]))
    conn.commit()
    response = '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ'
    bot.send_message(chat_id=update.message.chat_id, text=response)

def r_set_unique(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174)):
        return
    request = "SELECT rank_id FROM ranks WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[3],))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–≤–∞–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "UPDATE ranks SET rank_unique = %s WHERE rank_id = %s"
    cursor.execute(request, (mes.text.split("_")[4], mes.text.split("_")[3]))
    conn.commit()
    response = '–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ'
    bot.send_message(chat_id=update.message.chat_id, text=response)



def reg(bot, update):
    mes = update.message
    request = "SELECT * FROM users WHERE telegram_id = %s"
    cursor.execute(request, (mes.from_user.id,))
    row = cursor.fetchone()
    if row is None: #–î–æ–±–∞–≤–ª—è–µ–º —á–µ–ª–∏–∫–∞ –Ω–µ –∏–∑ —á–≤
        #response = '–ü—Ä–æ—Ñ–∏–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ /hero'
        #bot.send_message(chat_id=update.message.chat_id, text=response)
        #return
        request = "INSERT INTO users(user_castle, telegram_id, telegram_username, username, last_update, dspam_user) VALUES ('üîí', %s, %s, %s, %s, '1')"
        cursor.execute(request, (mes.from_user.id, mes.from_user.username, mes.from_user.username, time.strftime('%Y-%m-%d %H:%M:%S'),))
        conn.commit()
        request = "SELECT user_id FROM users WHERE telegram_id = %s"
        cursor.execute(request, (mes.from_user.id,))
        row = cursor.fetchone()
        request = "INSERT INTO dspam_users(user_id, telegram_id, username) VALUES (%s, %s, %s)"
        cursor.execute(request, (int(row[0]), mes.from_user.id, mes.from_user.username))
        conn.commit()
        response = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    if int(row[12]) == 1:
        response = '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "UPDATE users SET dspam_user = '1' where telegram_id = %s"
    cursor.execute(request, (mes.from_user.id,))
    conn.commit()
    request = "INSERT INTO dspam_users(user_id, telegram_id, username) VALUES (%s, %s, %s)"
    cursor.execute(request, (int(row[0]), mes.from_user.id, row[4]))
    conn.commit()
    response = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞'
    bot.send_message(chat_id=update.message.chat_id, text=response)


def set_call_sign(bot, update, args):
    mes = update.message
    if not args:
        response = '–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "SELECT * FROM dspam_users WHERE telegram_id = %s"
    cursor.execute(request, (mes.from_user.id,))
    row = cursor.fetchone()
    if row is None:
        response = '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return

    request = "INSERT INTO requests(request_type, user_id, data) VALUES ('1', %s, %s)"
    cursor.execute(request, (int(row[0]), mes.text[15:]))
    conn.commit()
    response = '–ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑—ã–≤–Ω–æ–≥–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω'
    bot.send_message(chat_id=update.message.chat_id, text=response)
    response = "–í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –æ—Ç <b>" + row[2] + "</b>.\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /requests"
    #update.message.from_user.id not in get_admin_ids(bot, update.message.chat_id)
    bot.send_message(chat_id=231900398, text=response, parse_mode='HTML')
    for id in get_admin_ids(bot, -1001330929174):
        try:
            bot.send_message(chat_id = id, text = response, parse_mode = 'HTML')
        except TelegramError:
            pass

def force_call_sign(bot, update, args):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id = -1001330929174)):
        return
    if not args:
        response = '–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    request = "SELECT * FROM dspam_users WHERE user_id = %s"
    cursor.execute(request, (args[0],))
    row = cursor.fetchone()
    if row is None:
        response = '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    from_position = mes.text[17:].find(" ") + 17 + 1
    request = "UPDATE dspam_users SET call_sign = %s WHERE user_id = %s"
    cursor.execute(request, (mes.text[from_position:].upper(), row[0]))
    conn.commit()

    response = '–ü–æ–∑—ã–≤–Ω–æ–π —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!'
    bot.send_message(chat_id=update.message.chat_id, text=response)
    response_to_id = row[1]
    request = "SELECT call_sign, username FROM dspam_users WHERE telegram_id = %s"
    cursor.execute(request, (mes.from_user.id,))
    row = cursor.fetchone()
    sign = row[0]
    if row[0] == "–¢–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç (—É—Å—Ç–∞–Ω–æ–≤–∏ –ø–æ–∑—ã–≤–Ω–æ–π)":
        sign = row[1]
    try:
        bot.send_message(chat_id=response_to_id, text="–í–∞—à –ø–æ–∑—ã–≤–Ω–æ–π –∏–∑–º–µ–Ω—ë–Ω <b>{0}</b> –Ω–∞ <b>{1}</b>.\n–°–º–æ—Ç—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ /profile".format(sign, mes.text[from_position:]), parse_mode='HTML')
    except TelegramError:
        bot.send_message(chat_id=-1001197381190, text="–û–ø–æ–≤–µ—â–µ–Ω–∏–µ '{0}' –Ω–µ —É–¥–∞–ª–æ—Å—å".format(row[3]))



def requests(bot, update):
    mes = update.message
    if (mes.from_user.id != 231900398) and (mes.from_user.id not in get_admin_ids(bot, chat_id = -1001330929174)):
        return
    request = "SELECT * FROM requests"
    cursor.execute(request)
    row = cursor.fetchone()
    response = ""
    while row:
        if int(row[1]) == 1:
            request = "SELECT telegram_username, username FROM users WHERE user_id = %s"
            cursor_2.execute(request, (row[2],))
            names = cursor_2.fetchone()
            response_new = ""
            response_new += "\n–ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑—ã–≤–Ω–æ–≥–æ –æ—Ç <b>" + names[1] + "</b>"
            if names[0]:
                response_new += " @" + names[0] + ":\n"
            else:
                response_new += ":\n"
            response_new += "<b>" + row[3].upper() + "</b>\n"
            response_new += "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ: /confirm_" + str(row[0]) + "\n–û—Ç–∫–ª–æ–Ω–∏—Ç—å: /reject_" + str(row[0]) + "\n"
            response_new += "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ—Ñ–∏–ª–µ: /pr_" + str(row[2]) + "\n______________________________\n"
            if len(response + response_new) >= 4096:
                bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
                response = ""
            response += response_new
        row = cursor.fetchone()
    if response == "":
        response = "–ó–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç. –•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞!"
    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')

def confirm(bot, update):
    mes = update.message
    if mes.from_user.id != 231900398 and mes.from_user.id not in get_admin_ids(bot, chat_id = -1001330929174):
        return
    request_id = int(mes.text.split('_')[1])
    request = "SELECT * FROM requests WHERE request_id = %s"
    cursor.execute(request, (request_id,))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    if row[1] == 1:
        request = "UPDATE dspam_users SET call_sign = %s WHERE user_id = %s"
        cursor.execute(request, (row[3].upper(), row[2]))
        conn.commit()
        request = "DELETE FROM requests WHERE request_id = %s"
        cursor.execute(request, (request_id,))
        conn.commit()
        response = '–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: /requests'
        bot.send_message(chat_id = update.message.chat_id, text=response)
        request = "SELECT telegram_id FROM users WHERE user_id = %s"
        cursor.execute(request, (row[2],))
        response_to_id = cursor.fetchone()
        try:
            bot.send_message(chat_id = response_to_id[0], text = "–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑—ã–≤–Ω–æ–≥–æ –Ω–∞ <b>{0}</b> –æ–¥–æ–±—Ä–µ–Ω.\n–°–º–æ—Ç—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ /profile".format(row[3]), parse_mode='HTML')
        except TelegramError:
            bot.send_message(chat_id = -1001197381190, text = "–û–ø–æ–≤–µ—â–µ–Ω–∏–µ '{0}' –Ω–µ —É–¥–∞–ª–æ—Å—å".format(row[3]))

def reject(bot, update):
    mes = update.message
    if mes.from_user.id != 231900398 and mes.from_user.id not in get_admin_ids(bot, chat_id = -1001330929174):
        return
    request_id = int(mes.text.split('_')[1])
    request = "SELECT * FROM requests WHERE request_id = %s"
    cursor.execute(request, (request_id,))
    row = cursor.fetchone()
    if row is None:
        response = '–ó–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'
        bot.send_message(chat_id=update.message.chat_id, text=response)
        return
    if row[1] == 1:
        request = "DELETE FROM requests WHERE request_id = %s"
        cursor.execute(request, (request_id,))
        conn.commit()
        response = '–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: /requests'
        bot.send_message(chat_id=update.message.chat_id, text=response)

        request = "SELECT telegram_id FROM users WHERE user_id = %s"
        cursor.execute(request, (row[2],))
        response_to_id = cursor.fetchone()
        try:
            bot.send_message(chat_id=response_to_id[0], text="–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑—ã–≤–Ω–æ–≥–æ –Ω–∞ <b>{0}</b> –æ—Ç–∫–ª–æ–Ω—ë–Ω.\n–£–∑–Ω–∞–π—Ç–µ, –ø–æ—á–µ–º—É —É @Cactiw!".format(row[3]), parse_mode='HTML')
        except TelegramError:
            bot.send_message(chat_id=-1001197381190, text="–û–ø–æ–≤–µ—â–µ–Ω–∏–µ '{0}' –Ω–µ —É–¥–∞–ª–æ—Å—å".format(row[3]))

# TODO —Å–¥–µ–ª–∞—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–≤–µ—Å—Ç–æ–≤


def dspam_list(bot, update):
    mes = update.message
    #if mes.from_user.id != 231900398 and mes.from_user.id not in get_admin_ids(bot, chat_id=-1001330929174):
        #return
    request = "SELECT * FROM dspam_users"
    cursor.execute(request)
    row = cursor.fetchone()
    response = "–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –î–°–ü–ê–ú:\n"
    while row:
        request = "SELECT telegram_username, username FROM users WHERE user_id = %s"
        cursor_2.execute(request, (row[0],))
        names = cursor_2.fetchone()
        response_new = ""
        response_new += "\n<b>" + names[1] + "</b>"

        if names[0]:
            response_new += " @" + names[0]
        response_new += "\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: /pr_" + str(row[0]) + "\n"
        request = "SELECT rank_name, rank_unique FROM ranks WHERE rank_id = %s"
        cursor_2.execute(request, (row[4],))
        rank = cursor_2.fetchone()
        response_new += "<b>"
        if rank[1]:
            response_new += ranks_specials[rank[1]]
        response_new += rank[0] + "</b>\n"
        response_new += "–†–µ–ø—É—Ç–∞—Ü–∏—è: <b>" + str(row[6]) + "</b>\n"
        response_new += "\n______________________________\n"
        if len(response + response_new) >= 4096:
            bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')
            response = ""
        response += response_new
        row = cursor.fetchone()

    bot.send_message(chat_id=update.message.chat_id, text=response, parse_mode='HTML')